# compose file for local dev with isolated backend and services container
# (db migration is done in backend container)

services:
  postgres:
    extends:
      file: docker-compose-base.yml
      service: postgres
    # If persistent storage is required, uncomment volumes list:
    # volumes:
      # - ${POSTGRES_VOLUME:-./var/postgres}:/var/lib/postgresql/data:delegated

  redis:
    extends:
      file: docker-compose-base.yml
      service: redis

  redis-monitor:
    extends:
      file: docker-compose-base.yml
      service: redis-monitor

  rabbit:
    extends:
      file: docker-compose-base.yml
      service: rabbit

  minio:
    extends:
      file: docker-compose-base.yml
      service: minio

  minio_setup:
    extends:
      file: docker-compose-base.yml
      service: minio_setup

  orchestrator:
    extends:
      file: docker-compose-base.yml
      service: orchestrator

  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    hostname: keycloak
    # as we need to access keycloak from backend Docker container under docker internal port, we need to start Keycloak on configured port, port forwarding in Docker run is not enough
    command: start-dev --import-realm --http-port ${KEYCLOAK_PORT:-8081} --hostname keycloak
    ports:
      - ${KEYCLOAK_PORT:-8081}:${KEYCLOAK_PORT:-8081}
    volumes:
      # TODO can we avoid copying the realm config? Download in an init container from the repo....?
      - ./keycloak/netzgrafikeditor-realm.json:/opt/keycloak/data/import/netzgrafikeditor-realm.json
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=netzgrafikeditor

networks:
  flatland-benchmarks:
