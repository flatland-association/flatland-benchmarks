services:
  postgres:
    image: postgres:15
    hostname: postgres
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "${POSTGRES_DB}" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
      - flatland-benchmarks
  redis:
    image: redis
    ports:
      - 6379:6379
    restart: unless-stopped
    logging:
      options:
        max-size: "20m"
        max-file: "5"
    networks:
      - flatland-benchmarks

  redis-monitor:
    image: redis
    command: redis-cli -h redis -p 6379 monitor
    restart: unless-stopped
    logging:
      options:
        max-size: "20m"
        max-file: "5"
    depends_on:
      redis:
        condition: service_started
    networks:
      - flatland-benchmarks

  rabbit:
    build:
      context: rabbitmq
      dockerfile: Dockerfile
      args:
        - WORKER_CONNECTION_TIMEOUT=${WORKER_CONNECTION_TIMEOUT}
    hostname: rabbit
    env_file: .env
    environment:
      - http_proxy=${RABBITMQ_HTTP_PROXY}
      - https_proxy=${RABBITMQ_HTTPS_PROXY}
      - no_proxy=${RABBITMQ_NO_PROXY}
    ports:
      - ${RABBITMQ_MANAGEMENT_PORT:-15672}:15672
      - ${RABBITMQ_PORT}:5672
    restart: unless-stopped
    logging:
      options:
        max-size: "20m"
        max-file: "5"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - flatland-benchmarks

  compute_worker:
    # https://docs.celeryq.dev/en/stable/reference/cli.html#celery-worker
    command: python -m celery -A tasks worker -l info -n compute-worker@%n
    build:
      context: ./compute_worker
      dockerfile: Dockerfile_docker_compose
    depends_on:
      rabbit:
        condition: service_healthy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./compute_worker/tasks_docker_compose.py:/app/tasks.py
    env_file: .env
    environment:
      - BROKER_URL=pyamqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@${RABBITMQ_HOST}:${RABBITMQ_PORT}//
      - REDIS_IP=redis://redis:6379
      - HOST_DIRECTORY=${PWD}
      - BENCHMARKING_NETWORK=${COMPOSE_PROJECT_NAME}_flatland-benchmarks
    logging:
      options:
        max-size: "20m"
        max-file: "5"
    healthcheck:
      test: celery -A tasks inspect ping
    networks:
      - flatland-benchmarks

  fab-backend:
    image: ghcr.io/flatland-association/fab-backend:latest
    pull_policy: always
    depends_on:
      rabbit:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./config.jsonc:/usr/src/app/dist/backend/config/config.jsonc
    ports:
      - 8000:8000
    networks:
      - flatland-benchmarks

  fab-frontend:
    image: ghcr.io/flatland-association/fab-frontend:latest
    pull_policy: always
    depends_on:
      rabbit:
        condition: service_healthy
    ports:
      - 80:80
networks:
  flatland-benchmarks:

volumes:
  flatland-benchmarks:
    external: true
