services:
  postgres:
    extends:
      file: docker-compose-base.yml
      service: postgres

  redis:
    extends:
      file: docker-compose-base.yml
      service: redis

  redis-monitor:
    extends:
      file: docker-compose-base.yml
      service: redis-monitor

  rabbit:
    extends:
      file: docker-compose-base.yml
      service: rabbit

  minio:
    extends:
      file: docker-compose-base.yml
      service: minio

  minio_setup:
    extends:
      file: docker-compose-base.yml
      service: minio_setup

  orchestrator:
    extends:
      file: docker-compose-base.yml
      service: orchestrator

  # TODO flyway in backend container seems not to work on MacOS at least... use one or the other
  flyway:
    profiles: [ full, localbuild ]
    extends:
      file: docker-compose-base.yml
      service: flyway
    # data is not present in docker-compose-base but required for test
    volumes:
      - ../ts/backend/src/migration/schema:/flyway/sql/schema
      - ../ts/backend/src/migration/data:/flyway/sql/data

  fab-backend:
    profiles: [ full ]
    extends:
      file: docker-compose-base.yml
      service: fab-backend
    volumes:
      # comment out for local development
      - ../dist/backend/app:/usr/src/app/dist/backend/app
      - ../node_modules:/usr/src/app/node_modules
      #- ../ts/backend/src/migration/schema:/flyway/sql/schema
      #- ../ts/backend/src/migration/data:/flyway/sql/data
      # reverse proxy to access keycloak via localhost:8081 in backend container
      - ../deployment/backend/nginx.conf:/etc/nginx/http.d/default.conf
      - ../deployment/backend/start_reverseproxy.sh:/flyway/start.sh
    entrypoint: bash
    command:
      - /flyway/start.sh
    depends_on:
      # workaround for docker compose waithing for flyway although exited with 0 https://forums.docker.com/t/behavior-of-up-wait-changed/147699/4
      flyway:
        condition: service_completed_successfully

  fab-frontend:
    profiles: [ full ]
    extends:
      file: docker-compose-base.yml
      service: fab-frontend
      # comment out for local development:
    volumes:
      - ../dist/frontend/browser:/usr/share/nginx/html
    depends_on:
      # workaround for docker compose waithing for flyway although exited with 0 https://forums.docker.com/t/behavior-of-up-wait-changed/147699/4
      flyway:
        condition: service_completed_successfully

  keycloak:
    profiles: [ full ]
    build:
      context: ../deployment/keycloak
    hostname: keycloak
    # as we need to access keycloak from backend Docker container under docker internal port, we need to start Keycloak on configured port, port forwarding in Docker run is not enough
    command:
      start-dev --import-realm --http-port ${KEYCLOAK_PORT:-8081} --hostname localhost
    ports:
      - ${KEYCLOAK_PORT:-8081}:${KEYCLOAK_PORT:-8081}
    volumes:
      # TODO can we avoid copying the realm config? Download in an init container from the repo....?
      - ./keycloak/netzgrafikeditor-realm.json:/opt/keycloak/data/import/netzgrafikeditor-realm.json
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=netzgrafikeditor
    networks:
      - flatland-benchmarks
    healthcheck:
      test: [ "CMD", "bash", "-c", "curl -v --fail http://127.0.0.1:${KEYCLOAK_PORT:-8081}/realms/netzgrafikeditor/.well-known/openid-configuration" ]
      interval: 5s
      timeout: 10s
      retries: 30
networks:
  flatland-benchmarks:
