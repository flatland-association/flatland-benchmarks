name: Checks

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [ "main" ]
  # Scheduled workflows will only run on the default branch.
  schedule:
    - cron: '30 5 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  test-flatland3-benchmarks:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.13" ]
    steps:
      - uses: actions/checkout@v4
      - name: Download debug environments
        working-directory: evaluation/flatland3_benchmarks
        run: |
          wget "https://data.flatland.cloud/benchmarks/Flatland3/debug-environments.zip" -O debug-environments.zip
          unzip -o debug-environments.zip -d evaluator
          find .
          git status
          git checkout -- evaluator/debug-environments/metadata.csv
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pytest
        working-directory: evaluation/flatland3_benchmarks
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-dev.txt
          python -m pip install -r orchestrator/requirements.txt
          python -m pip list
      - name: Clone ai4realnet-orchestrators for integration tests
        uses: actions/checkout@v4
        with:
          repository: flatland-association/ai4realnet-orchestrators
          path: evaluation/ai4realnet_orchestrators
          ref: feature/integration-api-changes
      - name: Run Flatland 3 Benchmarks Integration Tests
        working-directory: evaluation/flatland3_benchmarks
        run: |
          export PYTHONPATH=$PWD:$PWD/../ai4realnet_orchestrators/ai4realnet_orchestrators
          export OAUTHLIB_INSECURE_TRANSPORT=1
          pytest -s evaluator
          pytest -s orchestrator

  test-ai4realnet-orchestrator-railway:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.13" ]
        node-version: [ "22.x" ]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Re-generate swagger.json in backend build
        working-directory: ts/backend/
        run: |
          npm run build
      - name: Copy swagger.json from backend to openapi.json in client-lib
        run: |
          cp ts/backend/src/swagger/swagger.json  fab-clientlib/openapi.json
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Clone ai4realnet-orchestrators for integration tests
        uses: actions/checkout@v4
        with:
          repository: flatland-association/ai4realnet-orchestrators
          path: evaluation/ai4realnet_orchestrators
          ref: feature/integration-api-changes
      - name: Install ai4realnet Orchestrators Integration Tests Dependencies
        working-directory: evaluation/ai4realnet_orchestrators
        run: |
          python -m pip install -r requirements.txt -r requirements-dev.txt -r ai4realnet_orchestrators/railway/requirements.txt
      - name: Regenerate client lib locally overwriting dependency.
        working-directory: fab-clientlib
        run: |
          python -m pip install openapi-generator-cli==7.15.0
          openapi-generator-cli generate -i openapi.json -g python -c .openapi-generator-config.json --package-name fab_clientlib
      - name: Install client lib
        working-directory: fab-clientlib
        run: |
          python -m pip install .
          python -m pip list
      - name: Run ai4realnet Orchestrators Integration Tests
        working-directory: evaluation/ai4realnet_orchestrators
        run: |
          export OAUTHLIB_INSECURE_TRANSPORT=1
          pytest -s -m integration

  test-clientlib:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.13" ]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run fab-clientlib unit tests
        working-directory: fab-clientlib
        run: |
          python -m pip install -r requirements.txt
          python -m pip install -r test-requirements.txt
          python -m pytest test
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Re-generate swagger.json in backend build
        working-directory: ts/backend/
        run: |
          npm run build
      - name: Copy swagger.json from backend to openapi.json in client-lib
        run: |
          cp ts/backend/src/swagger/swagger.json  ./fab-clientlib/openapi.json
      - name: Regenerate client lib
        working-directory: fab-clientlib
        run: |
          python -m pip install openapi-generator-cli==7.15.0
          openapi-generator-cli generate -i openapi.json -g python -c .openapi-generator-config.json --package-name fab_clientlib
      - name: Install client lib
        working-directory: fab-clientlib
        run: |
          python -m pip install .
      - name: Clone ai4realnet-orchestrators for integration tests
        uses: actions/checkout@v4
        with:
          repository: flatland-association/ai4realnet-orchestrators
          path: evaluation/ai4realnet_orchestrators
          ref: feature/integration-api-changes
      - name: Run fab-clientlib integration tests
        working-directory: fab-clientlib
        run: |
          export OAUTHLIB_INSECURE_TRANSPORT=1
          python -m pip install -U -r requirements-dev.txt
          pytest -s test_containers_fab_rest_api.py

  eslint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ "22.x" ]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Type check and eslint backend
        working-directory: ts/backend/
        run: npm run check
      - name: Type check and eslint frontend
        working-directory: ts/frontend/
        run: npm run check

  test-frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ "22.x" ]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        working-directory: ts/frontend/
        run: npm test
      - name: Build
        working-directory: ts/frontend/
        run: npm run build

  test-backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ "22.x" ]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Copy .env.test
        run: cp .env.test.template .env.test
      - name: Run tests
        working-directory: ts/backend/
        run: npm test
      - name: Build
        working-directory: ts/backend/
        run: npm run build
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: validate swagger.json
        run: |
          python -m pip install openapi-generator-cli==7.15.0
          # workaround for validate always returning 0
          openapi-generator-cli validate -i ts/backend/src/swagger/swagger.json  2> fail.txt
          cat fail.txt
          exit $(cat fail.txt | wc -l)

