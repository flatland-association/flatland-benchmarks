name: Checks

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [ "main" ]
  # Scheduled workflows will only run on the default branch.
  schedule:
    - cron: '30 5 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-evaluation-compute-worker:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.13" ]
    steps:
      - uses: actions/checkout@v4
      - name: Download debug environments
        run: |
          wget "https://data.flatland.cloud/benchmarks/Flatland3/debug-environments.zip" -O debug-environments.zip
          unzip -o debug-environments.zip -d evaluation/evaluator
          find .
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pytest
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r evaluation/requirements-dev.txt
          python -m pip install -r evaluation/orchestrator/requirements.txt
          python -m pip install -r evaluation/ai4realnet_orchestrators/requirements.txt -r evaluation/ai4realnet_orchestrators/requirements-dev.txt
      - name: Run tests
        working-directory: ./evaluation/
        run: pytest -s --ignore ai4realnet_orchestrators

  tests-orchestrator-e2e:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.13" ]
    steps:
      - uses: actions/checkout@v4
      - name: Download debug environments
        run: |
          wget "https://data.flatland.cloud/benchmarks/Flatland3/debug-environments.zip" -O debug-environments.zip
          unzip -o debug-environments.zip -d evaluation/evaluator
          find .
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pytest
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r evaluation/ai4realnet_orchestrators/requirements.txt -r evaluation/ai4realnet_orchestrators/requirements-dev.txt
      - name: Run tests
        working-directory: ./evaluation/ai4realnet_orchestrators
        run: |
          export OAUTHLIB_INSECURE_TRANSPORT=1
          pytest -s test_containers_submission_api.py

  test-frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ "22.x" ]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        working-directory: ./ts/frontend/
        run: npm test
      - name: Build
        working-directory: ./ts/frontend/
        run: npm run build

  test-backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ "22.x" ]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Copy .env.test
        run: cp ./evaluation/.env.test.template ./evaluation/.env.test
      - name: Run tests
        working-directory: ./ts/backend/
        run: npm test
      - name: Build
        working-directory: ./ts/backend/
        run: npm run build
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: validate swagger.json
        run: |
          python -m pip install openapi-generator-cli
          openapi-generator-cli validate -i ts/backend/src/swagger/swagger.json  2> fail.txt
          cat fail.txt
          exit $(cat fail.txt | wc -l)

